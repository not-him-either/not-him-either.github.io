<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="A special Valentine's surprise filled with love, memories, and romantic moments.">
  <meta name="keywords" content="Valentine's Day, love, romance, special surprise">
  <meta name="author" content="Your Secret Admirer">
  <meta name="theme-color" content="#ff5f6d">
  
  <!-- Social Media Meta Tags -->
  <meta property="og:type" content="website">
  <meta property="og:title" content="For My Dearest Princess - A Valentine's Surprise">
  <meta property="og:description" content="A magical journey of love awaits. Will you be my Valentine? Click to discover our story...">
  <meta property="og:image" content="assets/images/hero-bg.jpg">
  <meta property="og:image:alt" content="Valentine's Day Special Surprise">
  <meta property="og:site_name" content="Valentine's Special">
  
  <!-- Twitter specific -->
  <meta name="twitter:creator" content="@yourusername">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="For My Dearest Princess" />
  <meta name="twitter:description" content="A journey of whispered memories and dreams. Will you be my Valentine?" />
  <meta name="twitter:image" content="assets/images/photo2.jpeg" />
  
  <link rel="stylesheet" href="style.css">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
<body onload="/* Removed auto-play to prevent NotAllowedError */">
  <!-- Countdown Timer -->
  <div id="countdown"></div>
  
  <!-- Background Music with Controls -->
  <audio id="bg-music" controls loop preload="auto" playsinline autoplay muted style="position: fixed; bottom: 20px; left: 20px; z-index:1000; opacity:0.8;">
    <source src="assets/audio/song-bg.mp3" type="audio/mpeg">
    Your browser does not support the audio element.
  </audio>
  
  <!-- Hidden Click Sound Audio -->
  <audio id="click-sound" src="assets/audio/click.wav" preload="auto"></audio>
  
  <!-- Hero Section with Parallax Effect -->
  <header>
    <div>
      <h1>For My Dearest Princess</h1>
      <p>A journey of whispered memories and dreams...</p>
      <a href="#cta" style="position: relative; z-index: 2;">Scroll for a surprise</a>
    </div>
  </header>
  
  <!-- Photo Carousel Section -->
  <section class="carousel">
    <div class="slides">
      <!-- Replace with your actual image URLs -->
      <img src="assets/images/photo1.jpeg" alt="Princess Photo 1" loading="lazy">
      <img src="assets/images/photo3.jpeg" alt="Photo 3" loading="lazy">
      <img src="assets/images/photo2.jpeg" alt="Princess Photo 2" loading="lazy">
    </div>
    <div class="carousel-buttons">
      <button id="prevBtn">&#10094;</button>
      <button id="nextBtn">&#10095;</button>
    </div>
  </section>
  
  <!-- Hidden Poem / Love Letter Section -->
  <section class="hidden-poem">
    <button id="reveal-poem">Reveal Our Secret Poem</button>
    <div class="poem-content" id="poem-content">
      <p>
        Under the soft glow of that enchanted night,<br>
        When our lips met in tender, whispered light,<br>
        I traced destiny in your eyes so true,<br>
        And in that silent moment, I knew my world was you.
      </p>
      <button id="reveal-extra" style="margin-top:10px; background:#f39c12; padding:5px 15px; border:none; border-radius:5px; color:#fff;">More</button>
      <div class="extra-poem" id="extra-poem">
        <p>
          As the night deepened and stars aligned,<br>
          Each heartbeat wrote a verse, uniquely designed.<br>
          Our souls entwined in that mystical hueâ€”<br>
          A promise eternal, forever me and you.
        </p>
      </div>
    </div>
  </section>
  
  <!-- Interactive Map Placeholder Section -->
  <section class="interactive-map" id="interactive-map">
    <p>Click here to explore the places where our story began...</p>
  </section>
  
  <!-- Call-to-Action Section -->
  <section class="cta" id="cta">
    <h2>Will you be my Valentine?</h2>
    <button class="yes-btn" id="yesBtn">Yes</button>
    <button class="no-btn" id="noBtn">No</button>
    <div id="ctaResponse"></div>
    <!-- Placeholder link for further details -->
    <div id="moreInfo"></div>
  </section>
  
  <!-- Hidden Form for EmailJS -->
  <form id="form" style="display: none;">
    <input type="hidden" name="message" value="I can't wait to celebrate our love and our magical journey together!">
    <button type="submit" id="button">Send</button>
  </form>
  
  <!-- Footer -->
  <footer>
    Crafted with love &hearts; | &copy; 2025
  </footer>
  
  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>
  <script>
    (function() {
      emailjs.init("KvcwdCEof7Q3jgzMy");
    })();
  </script>
  <script src="main.js" defer></script>
  <script src="email.js" defer></script>
</body>
</html>

*****************************************************
// Initialize global bgMusic and click sound functions
const bgMusic = document.getElementById('bg-music');  // FIX: define bgMusic to be used in lyric functions

// Auto-play background music when page loads
window.addEventListener('load', function() {
  try {
    bgMusic.play().catch(function(error) {
      console.log("Audio autoplay failed:", error);
    });
  } catch (e) {
    console.log("Audio play error:", e);
  }
});

function playClickSound() {
  const clickSound = document.getElementById('click-sound');
  if (clickSound) {
    clickSound.currentTime = 0;
    clickSound.play();
  } else {
    console.warn("click-sound element not found");
  }
}

/* Countdown Timer */
function updateCountdown() {
  const countdownElement = document.getElementById('countdown');
  // Set Valentine's Day - February 14, 2025
  const valentineDate = new Date('February 14, 2025 00:00:00').getTime();
  const now = new Date().getTime();
  const distance = valentineDate - now;
  
  if (distance < 0) {
    countdownElement.innerHTML = "Happy Valentine's Day!";
    return;
  }
  
  const days = Math.floor(distance / (1000 * 60 * 60 * 24));
  const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  const seconds = Math.floor((distance % (1000 * 60)) / 1000);
  
  countdownElement.innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
}
setInterval(updateCountdown, 1000);

/* Photo Carousel Functionality */
const slides = document.querySelector('.slides');
const totalSlides = document.querySelectorAll('.slides img').length;
let currentIndex = 0;

document.getElementById('nextBtn').addEventListener('click', () => {
  currentIndex = (currentIndex + 1) % totalSlides;
  updateCarousel();
});

document.getElementById('prevBtn').addEventListener('click', () => {
  currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
  updateCarousel();
});

function updateCarousel() {
  slides.style.transform = 'translateX(' + (-currentIndex * 100) + '%)';
}

// Auto-rotate carousel every 5 seconds
setInterval(() => {
  currentIndex = (currentIndex + 1) % totalSlides;
  updateCarousel();
}, 5000);

/* Hidden Poem Reveal */
document.getElementById('reveal-poem').addEventListener('click', function() {
  const poemContent = document.getElementById('poem-content');
  poemContent.style.display = (poemContent.style.display === "block") ? "none" : "block";
});
document.getElementById('reveal-extra').addEventListener('click', function() {
  const extraPoem = document.getElementById('extra-poem');
  extraPoem.style.display = (extraPoem.style.display === "block") ? "none" : "block";
});

/* Interactive Map Placeholder Click */
document.getElementById('interactive-map').addEventListener('click', function() {
  alert("Imagine an interactive map here, highlighting the places where our love story began!");
});

/* Call-to-Action Buttons */
function animateFlowers() {
  const flowersContainer = document.createElement('div');
  flowersContainer.className = 'flowers-container';
  // Increased the number of flowers from 10 to 20
  for (let i = 0; i < 20; i++) {
    const flower = document.createElement('div');
    flower.className = 'flower';
    flower.textContent = 'ðŸŒ¸';
    flower.style.left = Math.random() * 100 + 'vw';
    flower.style.animationDelay = Math.random() * 2 + 's';
    flowersContainer.appendChild(flower);
  }
  document.body.appendChild(flowersContainer);
  setTimeout(() => {
    flowersContainer.remove();
  }, 5000);
}

function createFlowerPopup(x, y) {
  const popup = document.createElement('div');
  popup.className = 'flower-popup';
  popup.style.left = x + 'px';
  popup.style.top = y + 'px';
  
  // Create multiple rings
  for(let i = 0; i < 3; i++) {
    const ring = document.createElement('div');
    ring.className = 'flower-ring';
    ring.style.animationDelay = `${i * 0.2}s`;
    popup.appendChild(ring);
  }
  
  document.body.appendChild(popup);
  setTimeout(() => popup.remove(), 1000);
}

document.getElementById('yesBtn').addEventListener('click', function(e) {
  // Create multiple flowers around the button
  const buttonRect = this.getBoundingClientRect();
  const centerX = buttonRect.left + buttonRect.width/2;
  const centerY = buttonRect.top + buttonRect.height/2;
  
  for(let i = 0; i < 8; i++) {
    const angle = (i / 8) * Math.PI * 2;
    const x = centerX + Math.cos(angle) * 20;
    const y = centerY + Math.sin(angle) * 20;
    createFlowerPopup(x, y);
  }
  
  playClickSound();
  console.log("Yes button pressed: initiating email send");
  
  // Send email using EmailJS (preserve the existing service)
  emailjs.send("service_7272v8p", "template_xpsvnyk", {
       to_name: "Princess",
       message: "I can't wait to celebrate our love and our magical journey together!"
  })
  .then(function(response) {
       console.log("SUCCESS", response.status, response.text);
  }, function(error) {
       console.log("FAILED", error);
  });
  
  // Trigger the hidden form submission (handled in email.js)
  document.getElementById("form").dispatchEvent(new Event("submit", { cancelable: true }));
  
  // Launch flowers animation
  animateFlowers();
  
  // Launch confetti fireworks animation
  confetti({
    particleCount: 150,
    spread: 70,
    origin: { y: 0.6 }
  });
  
  // Set the countdown link with desired text.
  document.getElementById('ctaResponse').innerHTML = '<a href="countdown.html" class="celebration-link">click here darling</a>';
  
  // New code: Create animated popup originating from the yes button
  const yesBtn = this;
  const popupRect = yesBtn.getBoundingClientRect();  // Renamed from 'rect' to 'popupRect'
  const popup = document.createElement('div');
  popup.className = 'celebration-popup';
  popup.innerHTML = '<p>Flower power and surprises await!</p>';
  popup.style.position = 'fixed';
  popup.style.top = popupRect.top + popupRect.height / 2 + 'px';
  popup.style.left = popupRect.left + popupRect.width / 2 + 'px';
  popup.style.transform = 'translate(-50%, -50%) scale(0)';
  popup.style.zIndex = '3000';
  document.body.appendChild(popup);
  // Animate the popup to expand (pop effect)
  requestAnimationFrame(() => {
    popup.style.transition = 'transform 0.5s ease-out, opacity 0.5s ease-out';
    popup.style.transform = 'translate(-50%, -50%) scale(1)';
    popup.style.opacity = '1';
  });
  // After the pop, remove the popup (remove extra link addition)
  setTimeout(() => {
    popup.style.transition = 'opacity 0.3s ease-out';
    popup.style.opacity = '0';
    setTimeout(() => {
      popup.remove();
      // Removed extra link appending to preserve the existing link.
      // The link set above will remain visible.
    }, 300);
  }, 500);
  
  // Additional animation (if desired)
  confetti({
    particleCount: 150,
    spread: 70,
    origin: { y: 0.6 }
  });
  document.getElementById('moreInfo').innerHTML = '<a href="#">Click here for your surprise date plan</a>';
  
  // After all animations, redirect to countdown page
  setTimeout(() => {
    window.location.href = 'countdown.html';
  }, 2000); // Wait 2 seconds after animations complete before redirecting
  
  // Set the link text while waiting for redirect
  document.getElementById('ctaResponse').innerHTML = '<p>Redirecting to your surprise...</p>';
});

document.getElementById('noBtn').addEventListener('click', function() {
  playClickSound();
  document.getElementById('ctaResponse').innerHTML = "Even if not today, my love remains eternal. Our moment will come.";
});

/* Smooth Scroll for Anchor Links */
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
      e.preventDefault();
      document.querySelector(this.getAttribute('href')).scrollIntoView({
          behavior: 'smooth'
      });
  });
});

/* Optional: Additional micro-interactions can be added here */

// Reminder: Replace YOUR_SERVICE_ID, YOUR_TEMPLATE_ID, and configure EmailJS (after emailjs.init routine) with your actual details for the email service.
*******************************************
// Initialize EmailJS once with the updated public key
emailjs.init("KvcwdCEof7Q3jgzMy");

/* Countdown Timer */
function updateCountdown() {
  const countdownElement = document.getElementById('countdown');
  // Set Valentine's Day - February 14, 2025
  const valentineDate = new Date('February 14, 2025 00:00:00').getTime();
  const now = new Date().getTime();
  const distance = valentineDate - now;
  
  if (distance < 0) {
    countdownElement.innerHTML = "Happy Valentine's Day!";
    return;
  }
  
  const days = Math.floor(distance / (1000 * 60 * 60 * 24));
  const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  const seconds = Math.floor((distance % (1000 * 60)) / 1000);
  
  countdownElement.innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
}
setInterval(updateCountdown, 1000);

/* Check if Today is Valentine's Day (Feb 14) */
function checkValentineTheme() {
  const today = new Date();
  // Note: getMonth() is 0-indexed: February is 1.
  if (today.getMonth() === 1 && today.getDate() === 14) {
    document.body.classList.add('valentine-theme');
  }
}
checkValentineTheme();

/* Photo Carousel Functionality */
const slides = document.querySelector('.slides');
const totalSlides = document.querySelectorAll('.slides img').length;
let currentIndex = 0;

document.getElementById('nextBtn').addEventListener('click', () => {
  playClickSound();
  currentIndex = (currentIndex + 1) % totalSlides;
  updateCarousel();
});

document.getElementById('prevBtn').addEventListener('click', () => {
  playClickSound();
  currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
  updateCarousel();
});

function updateCarousel() {
  slides.style.transform = 'translateX(' + (-currentIndex * 100) + '%)';
}

// Auto-rotate carousel every 5 seconds
setInterval(() => {
  currentIndex = (currentIndex + 1) % totalSlides;
  updateCarousel();
}, 5000);

/* Hidden Poem Reveal */
document.getElementById('reveal-poem').addEventListener('click', function() {
  playClickSound();
  const poemContent = document.getElementById('poem-content');
  poemContent.style.display = (poemContent.style.display === "block") ? "none" : "block";
});
document.getElementById('reveal-extra').addEventListener('click', function() {
  playClickSound();
  const extraPoem = document.getElementById('extra-poem');
  extraPoem.style.display = (extraPoem.style.display === "block") ? "none" : "block";
});

/* Interactive Map Placeholder Click */
document.getElementById('interactive-map').addEventListener('click', function() {
  playClickSound();
  alert("Imagine an interactive map here, highlighting the places where our love story began!");
});

/* Call-to-Action Buttons */
document.getElementById('yesBtn').addEventListener('click', function() {
  playClickSound();
  // Send an email using EmailJS
  emailjs.send("service_7272v8p", "template_xpsvnyk", {
       to_name: "Princess",
       message: "I can't wait to celebrate our love and our magical journey together!"
  })
  .then(function(response) {
       console.log("SUCCESS", response.status, response.text);
  }, function(error) {
       console.log("FAILED", error);
  });
  
  // Show a "Celebration!" message with animation
  document.getElementById('ctaResponse').innerHTML = "<span class='celebration'>Celebration!</span>";
  
  // Launch confetti/fireworks animation using canvas-confetti
  confetti({
    particleCount: 150,
    spread: 70,
    origin: { y: 0.6 }
  });
  
  // Optionally add a placeholder link for further details
  document.getElementById('moreInfo').innerHTML = '<a href="#">Click here for your surprise date plan</a>';
});

document.getElementById('noBtn').addEventListener('click', function() {
  playClickSound();
  document.getElementById('ctaResponse').innerHTML = "Even if not today, my love remains eternal. Our moment will come.";
});

/* Synchronized Lyrics Display */
const lyrics = [
  { time: 0, text: "â™ª In the hush of the night, our story began â™ª" },
  { time: 8, text: "â™ª A gentle whisper, a spark in the dark â™ª" },
  { time: 16, text: "â™ª Under starlit skies, our hearts found their mark â™ª" },
  { time: 24, text: "â™ª Every beat, every sigh, drawing us near â™ª" },
  { time: 32, text: "â™ª Promises of forever, crystal clear â™ª" },
  // Add additional lyrics with proper timestamps as needed
];

const bgMusic = document.getElementById('bg-music');

const syncedLyrics = [
  { start: 0, text: "I met somebody" },
  { start: 4, text: "Selfless and kind" },
  // Add each line with approximate start times in seconds
];

// Keep track of the current lyric index
let currentLyricIndex = 0;

bgMusic.addEventListener('timeupdate', () => {
  const currentTime = bgMusic.currentTime;
  // Find the next lyric that hasn't started yet
  if (currentLyricIndex < syncedLyrics.length - 1 &&
      currentTime >= syncedLyrics[currentLyricIndex + 1].start) {
    currentLyricIndex++;
  }
  // Update lyrics display with the active line
});

/* Hover and Click Sound Effects */
const hoverSound = document.getElementById('hover-sound');
const clickSound = document.getElementById('click-sound');

function playHoverSound() {
  hoverSound.currentTime = 0;
  hoverSound.play();
}

function playClickSound() {
  clickSound.currentTime = 0;
  clickSound.play();
}

// Attach hover sounds to interactive elements (buttons, links, carousel controls)
document.querySelectorAll('button, .scroll-link, .interactive-map').forEach(el => {
  el.addEventListener('mouseenter', playHoverSound);
});

/* Smooth Scroll for Anchor Links */
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
      e.preventDefault();
      document.querySelector(this.getAttribute('href')).scrollIntoView({
          behavior: 'smooth'
      });
  });
});
******************************************
/* Reset & Basic Styles */
* { margin: 0; padding: 0; box-sizing: border-box; }
body {
  font-family: 'Georgia', serif;
  background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
  color: #333;
  line-height: 1.6;
  overflow-x: hidden;
  scroll-behavior: smooth;
  animation: fadeBodyIn 1s ease-in-out;
}
a { text-decoration: none; }

/* Add optional pulse effect to the body background */
body::before {
  content: "";
  position: fixed;
  inset: 0;
  /* Light radial gradient that subtly pulses */
  background: radial-gradient(circle at center, rgba(255,255,255,0.1), transparent 50%);
  mix-blend-mode: overlay;
  animation: pulse 4s infinite alternate ease-in-out;
  pointer-events: none;
  z-index: -1;
}

/* Parallax Hero Section */
header {
  position: relative;
  height: 100vh;
  background: url('https://images.unsplash.com/photo-1515871204537-49a5fe66a31f?q=80&w=1382&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D') center/cover no-repeat fixed;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 20px;
}
header::after {
  content: "";
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0, 0, 0, 0.3);
}
header h1 {
  position: relative;
  color: #fff;
  font-size: 3em;
  margin-bottom: 10px;
  transition: transform 0.3s;
  background: linear-gradient(to right, #ff5f6d, #ffc371);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: fadeIn 1.5s ease-out forwards, textGlow 3s ease-in-out infinite alternate;
}
header p {
  position: relative;
  color: #fff;
  font-size: 1.2em;
  transition: opacity 0.3s;
  animation: fadeIn 2s ease-out forwards;
}
header a {
  position: relative;
  z-index: 2;
  color: #fff;
  font-size: 1.1em;
  border-bottom: 1px solid #fff;
  padding-bottom: 3px;
  transition: color 0.3s;
}
header a:hover { color: #f1c40f; }

header h1, header p {
  text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.7);
}

/* Countdown Timer */
#countdown {
  position: fixed;
  top: 20px;
  right: 20px;
  background: rgba(255,255,255,0.9);
  padding: 10px 15px;
  border-radius: 8px;
  font-size: 1.2em;
  font-weight: bold;
  z-index: 1000;
}

/* Photo Carousel */
.carousel {
  position: relative;
  max-width: 800px;
  margin: 40px auto;
  overflow: hidden;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}
.slides {
  display: flex;
  transition: transform 0.8s ease-in-out;
}
.slides img {
  width: 100%;
  flex-shrink: 0;
  object-fit: cover;
  height: auto;
}
.carousel-buttons {
  position: absolute;
  top: 50%;
  width: 100%;
  display: flex;
  justify-content: space-between;
  transform: translateY(-50%);
}
.carousel-buttons button {
  background: rgba(0,0,0,0.5);
  border: none;
  color: #fff;
  padding: 10px 15px;
  cursor: pointer;
  transition: background 0.3s;
}
.carousel-buttons button:hover { background: rgba(0,0,0,0.7); }

/* Hidden Poem Section */
.hidden-poem {
  text-align: center;
  margin: 40px 20px;
  transition: all 0.5s ease;
}
.hidden-poem button {
  padding: 10px 20px;
  background: #e74c3c;
  color: #fff;
  border: none;
  border-radius: 5px;
  font-size: 1em;
  cursor: pointer;
  transition: background 0.3s;
}
.hidden-poem button:hover { background: #c0392b; }
.poem-content {
  display: none;
  margin-top: 20px;
  font-size: 1.2em;
  font-style: italic;
  color: #555;
  line-height: 1.5;
}
.extra-poem {
  display: none;
  margin-top: 15px;
  font-size: 1em;
  color: #777;
}

/* Interactive Map Placeholder */
.interactive-map {
  text-align: center;
  margin: 40px 20px;
  padding: 40px;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  cursor: pointer;
  transition: background 0.3s;
}
.interactive-map:hover { background: #f1f1f1; }
.interactive-map p { font-size: 1.1em; }

/* Call-to-Action Section */
.cta {
  text-align: center;
  margin: 40px 20px;
  padding: 20px;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  transition: transform 0.3s;
}
.cta:hover { transform: scale(1.02); }
.cta h2 { font-size: 2em; margin-bottom: 20px; }
.cta button {
  padding: 12px 30px;
  font-size: 1.2em;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin: 10px;
  transition: transform 0.2s, background 0.3s;
}
.cta button:hover { transform: scale(1.05); }
.yes-btn { background: #27ae60; color: #fff; }
.no-btn { background: #c0392b; color: #fff; }
#ctaResponse { margin-top: 20px; font-size: 1.1em; }
#moreInfo a { font-size: 1.2em; text-decoration: underline; color: #27ae60; }

/* Animated Popup for Yes Button */
.celebration-popup {
  background: rgba(255,255,255,0.95);
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.5);
  opacity: 0;
}

/* Extra Link Style */
.celebration-extra-link {
  display: block;
  margin-top: 10px;
  font-size: 1.1em;
  color: #27ae60;
  text-align: center;
  text-decoration: underline;
}

/* Footer */
footer {
  text-align: center;
  padding: 20px;
  font-size: 0.9em;
  color: #777;
}

/* Responsive Design */
@media (max-width: 768px) {
  header h1 { font-size: 2.5em; }
  header p { font-size: 1em; }
  .carousel-buttons button { padding: 8px 12px; }
}

/* New media query for very small devices */
@media (max-width: 480px) {
  header {
    height: 100vh; /* Force full viewport height on mobile */
    padding: 10px;
  }
  header h1 {
    font-size: 1.8em;
    background: linear-gradient(to right, #ff7e5f, #feb47b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  header p {
    font-size: 0.9em;
  }
  #countdown {
    font-size: 1em;
    padding: 8px 10px;
  }
  .cta h2 {
    font-size: 1.5em;
  }
  .cta button {
    font-size: 1em;
    padding: 10px 20px;
  }
  /* Adjust carousel images if needed */
  .slides img {
    object-fit: cover;
  }
}

/* New keyframes for fadeIn animation */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* New keyframes for textGlow */
@keyframes textGlow {
  0% {
    text-shadow: 0 0 8px #ffc371;
  }
  50% {
    text-shadow: 0 0 16px #ff5f6d;
  }
  100% {
    text-shadow: 0 0 8px #ffc371;
  }
}

/* Fade-in keyframes */
@keyframes fadeBodyIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Pulse keyframes */
@keyframes pulse {
  0% {
    opacity: 0.2;
    transform: scale(1);
  }
  100% {
    opacity: 0.5;
    transform: scale(1.03);
  }
}

/* Flowers Animation */
.flowers-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2000;
}
.flower {
  position: absolute;
  font-size: 2rem;
  animation: flowerFall 4s linear forwards;
}
@keyframes flowerFall {
  from {
    transform: translateY(-100px) rotate(0deg);
    opacity: 1;
  }
  to {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Button Flower Animation */
@keyframes flowerExpand {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  70% {
    transform: scale(1.2);
    opacity: 0.7;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.flower-popup {
  position: absolute;
  width: 40px;
  height: 40px;
  pointer-events: none;
  z-index: 2000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.flower-popup::before {
  content: 'ðŸŒ¸';
  font-size: 2rem;
  animation: flowerExpand 0.8s ease-out forwards;
}

.flower-ring {
  position: absolute;
  border: 2px solid #ff69b4;
  border-radius: 50%;
  animation: flowerExpand 0.8s ease-out forwards;
}

/* Email Form Styles */
.field {
  margin-bottom: 10px;
}

.field label {
  display: block;
  font-size: 12px;
  color: #777;
}

.field input {
  display: block;
  min-width: 250px;
  line-height: 1.5;
  font-size: 14px;
}

input[type="submit"] {
  display: block;
  padding: 6px 30px;
  font-size: 14px;
  background-color: #4460AA;
  color: #fff;
  border: none;
}
*****************************
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Countdown to Valentine's Day</title>
    <link rel="stylesheet" href="style.css">
    <style>
        /* Optional inline styles for the countdown page */
        #countdownContainer {
            max-width: 600px;
            margin: 100px auto;
            text-align: center;
            padding: 20px;
            border: 2px solid #e74c3c;
            border-radius: 10px;
            background: #fff;
        }
        #countdownTimer {
            font-size: 2em;
            margin: 20px 0;
            color: #27ae60;
        }
        a.back-link {
            display: inline-block;
            margin-top: 20px;
            padding: 10px 20px;
            background: #4460AA;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
        }
        a.back-link:hover {
            background: #35518A;
        }
    </style>
</head>
<body>
    <div id="countdownContainer">
        <h1>Countdown to Valentine's Day</h1>
        <div id="countdownTimer">Loading Countdown...</div>
        <p>Wait till Valentine's Day for your surprise!</p>
        <a href="index.html" class="back-link">Back to Home</a>
    </div>
    <script>
        function updateCountdown() {
            const countdownElement = document.getElementById('countdownTimer');
            // Set Valentine's Day - February 14, 2025
            const valentineDate = new Date('February 14, 2025 00:00:00').getTime();
            const now = new Date().getTime();
            const distance = valentineDate - now;
  
            if (distance < 0) {
                countdownElement.innerHTML = "Happy Valentine's Day!";
                return;
            }
  
            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);
  
            countdownElement.innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
        }
        updateCountdown();
        setInterval(updateCountdown, 1000);
    </script>
</body>
</html>